{"version":3,"file":"post-grid/view.js","mappings":"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","sources":["webpack://dahlia-blocks/./src/post-grid/view.js"],"sourcesContent":["\n\nfunction initializeCarousels() {\n    const carouselBlocks = document.querySelectorAll('.wp-block-dahlia-blocks-post-grid');\n    if (carouselBlocks.length === 0) return;\n   \n    // Recorremos todos los elementos de tipo carousel.\n    carouselBlocks.forEach((carouselBlock) => {\n        const carousel = carouselBlock.querySelector('.post-grid-carousel');\n        if (!carousel) return;\n        const controls = carouselBlock.querySelector('.tns-controls');\n        const itemsLargeDesktop = parseInt(carousel.dataset.itemsLargeDesktop, 10) || 4;\n        const itemsDesktop = parseInt(carousel.dataset.itemsDesktop, 10) || 4;\n        const itemsTablet = parseInt(carousel.dataset.itemsTablet, 10) || 2;\n        const itemsMobile = parseInt(carousel.dataset.itemsMobile, 10) || 1;\n        const slideBy = parseInt(carousel.dataset.slideBy, 10) || 1;\n        const peek = carousel.dataset.peek === 'true';\n        const autoplay = carousel.dataset.autoplay === 'true';\n        const nav = carousel.dataset.nav === 'true';\n        // Inicializamos Tiny Slider.\n        const slider = tns({\n            container: carousel,\n            items: itemsDesktop,\n            slideBy: slideBy,\n            autoplay: autoplay,\n            controlsContainer: controls,\n            controls: true,\n            nav: nav,\n            autoplayButtonOutput: false,\n            loop: false,\n            gutter: 36,\n            \n            responsive: {\n                1750: { items: itemsLargeDesktop },\n                1200: { items: itemsDesktop },\n                992: { \n                    items: itemsDesktop - 1,\n                    edgePadding: peek ? 0 : 0, // Show part of the next slide if \"peek\" is true\n                },\n                768: { items: itemsTablet },\n                576: {\n                    items: itemsMobile,\n                    gutter: 36,\n                },\n                0: {\n                    items: itemsMobile,\n                    gutter: 20,\n                    edgePadding: peek ? 75 : 0, // Show part of the next slide if \"peek\" is true\n                },\n            },\n            \n        });\n        slider.events.on('indexChanged', () => {\n            const info = slider.getInfo();\n            const prevButton = carouselBlock.querySelector('.tns-prev');\n            const nextButton = carouselBlock.querySelector('.tns-next');\n        \n            // Desactiva el botón \"prev\" si estás en el primer slide\n            if (info.index === 0) {\n                prevButton.disabled = true;\n                prevButton.classList.add('disabled');\n            } else {\n                prevButton.disabled = false;\n                prevButton.classList.remove('disabled');\n            }\n        \n            // Desactiva el botón \"next\" si estás en el último slide\n            if (info.index + info.items >= info.slideCount) {\n                nextButton.disabled = true;\n                nextButton.classList.add('disabled');\n            } else {\n                nextButton.disabled = false;\n                nextButton.classList.remove('disabled');\n            }\n        });\n\n    });\n}\n\n// DOMContentLoaded ensures this runs after the DOM is ready\ndocument.addEventListener('DOMContentLoaded', () => {\n    initializeCarousels();\n});"],"names":["initializeCarousels","carouselBlocks","document","querySelectorAll","length","forEach","carouselBlock","carousel","querySelector","controls","itemsLargeDesktop","parseInt","dataset","itemsDesktop","itemsTablet","itemsMobile","slideBy","peek","autoplay","nav","slider","tns","container","items","controlsContainer","autoplayButtonOutput","loop","gutter","responsive","edgePadding","events","on","info","getInfo","prevButton","nextButton","index","disabled","classList","add","remove","slideCount","addEventListener"],"sourceRoot":""}